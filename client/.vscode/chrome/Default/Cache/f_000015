require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"App":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'a6d64c1Ku9NP7bJu0CmUs1s', 'App');
// app\App.js

cc.Class({
    "extends": cc.Component,

    properties: {},

    // use this for initialization
    onLoad: function onLoad() {
        cc.app = this;
    },

    start: function start() {
        cc.log("App started...");

        // cc.app.showPage("prefabes/login/normal",0,true,"测试",null,null,true,false);
        // cc.app.showPage("prefabes/page_login/page_login",0,false,null,null,null,true,false);
        cc.app.cleanAllLayers();
        cc.app.showPage("prefabes/page_login/page_login", 2);
    },

    init: function init() {
        cc.user = {};
    },

    /**prefab,index,showBack,name,scriptName,detail,single,store*/
    showPage: function showPage(prefab, index, showBack, name, scriptName, detail, single, store) {
        var info = {
            path: prefab,
            layerIndex: index,
            showBack: showBack,
            backName: name,
            scriptName: scriptName,
            detail: detail,
            single: single,
            store: store
        };
        var event = new cc.Event.EventCustom(cc.page.SHOW_PAGE, true);
        event.detail = info;
        this.node.dispatchEvent(event);
    },

    backPage: function backPage() {
        var event = new cc.Event.EventCustom(cc.page.BACK_PAGE, true);
        this.node.dispatchEvent(event);
    },

    removePage: function removePage(layerIndex, removeNum) {
        var info = {
            layerIndex: layerIndex,
            removeNum: removeNum
        };
        var event = new cc.Event.EventCustom(cc.page.REMOVE_PAGE, true);
        event.detail = info;
        this.node.dispatchEvent(event);
    },

    cleanAllLayers: function cleanAllLayers() {
        var event = new cc.Event.EventCustom(cc.page.CLEAN_ALL_LAYERS, true);
        this.node.dispatchEvent(event);
    }

});

cc._RFpop();
},{}],"HTTP":[function(require,module,exports){
"use strict";
cc._RFpush(module, '32c0b6pdkRFp7IZx8EoySFA', 'HTTP');
// core\HTTP.js

var URL = "http://127.0.0.1:12580";
//var URL = "http://120.24.59.70:12580";

var HTTP = cc.Class({
    "extends": cc.Component,

    statics: {
        sessionId: 0,
        userId: 0,
        master_url: URL,
        url: URL,
        sendRequest: function sendRequest(path, data, handler, extraUrl) {
            var xhr = cc.loader.getXMLHttpRequest();
            xhr.timeout = 5000;
            var str = "?";
            for (var k in data) {
                if (str != "?") {
                    str += "&";
                }
                str += k + "=" + data[k];
            }
            if (extraUrl == null) {
                extraUrl = HTTP.url;
            }
            var requestURL = extraUrl + path + encodeURI(str);
            console.log("RequestURL:" + requestURL);
            xhr.open("GET", requestURL, true);
            if (cc.sys.isNative) {
                xhr.setRequestHeader("Accept-Encoding", "gzip,deflate", "text/html;charset=UTF-8");
            }

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {
                    console.log("http res(" + xhr.responseText.length + "):" + xhr.responseText);
                    try {
                        var ret = JSON.parse(xhr.responseText);
                        if (handler !== null) {
                            handler(ret);
                        } /* code */
                    } catch (e) {
                        console.log(e);
                    } finally {
                        if (cc.vv && cc.vv.wc) {
                            //       cc.vv.wc.hide();   
                        }
                    }
                }
            };
            if (cc.vv && cc.vv.wc) {
                //cc.vv.wc.show();
            }
            xhr.send();
        }
    }
});

cc._RFpop();
},{}],"core":[function(require,module,exports){
"use strict";
cc._RFpush(module, '801ccCg1qJHGo8NVrPS1Krf', 'core');
// core\core.js

cc.Class({
    "extends": cc.Component,

    // 页面名称，显示层级，是否显示回退，回退名称，
    // 点击回退则删除当前层级的最后一个子对象。
    // 层级 ：回退名称
    properties: {
        layers: {
            "default": [],
            type: cc.Node
        },
        back: cc.Button,
        backName: cc.Label,
        _backInfo: [],
        _curInfoIdx: 0,
        _loading: false
    },

    // use this for initialization
    onLoad: function onLoad() {

        cc.http = require("HTTP");

        cc.page = {
            SHOW_PAGE: "show_page",
            BACK_PAGE: "back_page",
            REMOVE_PAGE: "remove_page",
            CLEAN_ALL_LAYERS: "clean_all_layers"
        };

        this.initEventListener();
    },

    start: function start() {
        cc.log("框架初始完毕。。。");
    },

    initEventListener: function initEventListener() {
        this.node.on(cc.page.SHOW_PAGE, this.onShowPage.bind(this));
        this.node.on(cc.page.BACK_PAGE, this.onBackPage.bind(this));
        this.node.on(cc.page.REMOVE_PAGE, this.onRemovePage.bind(this));
        this.node.on(cc.page.CLEAN_ALL_LAYERS, this.cleanAllLayers.bind(this));
    },

    /** path, layerIndex,showBack,backName,single,store*/
    onShowPage: function onShowPage(info) {
        if (!info || !info.detail || this._loading) return;
        info = info.detail;

        var pageidx = info.layerIndex;
        if (pageidx < 0 || pageidx >= this.layers.length) return;

        this._backInfo.push(info);
        this._curInfoIdx = this._backInfo.length - 1;
        this._curPath = info.path;
        //加载prefab
        cc.loader.loadRes(info.path, (function (err, prefab) {
            if (prefab) {
                this._prefabLoaded(prefab);
            }
            if (err) {
                this._loading = false;
                cc.log(err);
            }
        }).bind(this));
        this._loading = true;
    },

    _prefabLoaded: function _prefabLoaded(prefab) {
        if (prefab) {
            this._loading = false;
            var curInfo = this._backInfo[this._curInfoIdx];

            var newNode = cc.instantiate(prefab);
            newNode.name = "page" + this._backInfo.length;

            var parent = this.layers[curInfo.layerIndex];
            if (curInfo.single) {
                parent.removeAllChildren();
            }
            parent.addChild(newNode);

            this.back.node.active = false;
            if (curInfo.showBack) {
                this.back.node.active = true;
                this.backName.string = curInfo.backName;
            }

            if (curInfo.scriptName && curInfo.scriptName != "") {
                newNode.getComponent(curInfo.scriptName).init(curInfo.detail);
            }
        }
    },

    onBackPage: function onBackPage(event) {
        var last = this._backInfo.pop();

        var parent = this.layers[last.layerIndex];
        parent.removeChild(parent.getChildByName("page" + (this._backInfo.length + 1)), true);

        //config pre
        this.back.node.active = false;
        last = this._backInfo[this._backInfo.length - 1];
        if (last) {
            if (last.showBack) {
                this.back.node.active = true;
                this.backName.string = last.backName;
            }
        }
    },

    /**删除某一层 的 N 个界面 */
    onRemovePage: function onRemovePage(event) {
        var info = event.detail;
        if (!info && info.layerIndex > this.layers.length) {
            return;
        }

        var cont = this.layers[info.layerIndex];
        if (info.removeNum < 1) {
            cont.removeAllChildren();
            return;
        }

        while (info.removeNum >= 1) {
            cont.removeChild(cont.children[cont.children.length - 1]);
            info.removeNum -= 1;
        }
    },

    cleanAllLayers: function cleanAllLayers() {
        this._curInfoIdx = 0;
        this._backInfo = [];
        this._loading = false;
        this.layers.forEach(function (element) {
            element.removeAllChildren();
        }, this);
    }

    // onCleanAlert: function (info) {

    // },

    // onRestart: function (info) {

    // },

});

cc._RFpop();
},{"HTTP":"HTTP"}],"dealer_item_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '5ee95dYpiFPM7vsmB5l156o', 'dealer_item_script');
// resources\prefabes\page_dealer\dealer_item_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        account: cc.Label,
        dealerName: cc.Label,
        curGems: cc.Label,
        curSubs: cc.Label,
        _curInfo: null
    },

    // use this for initialization
    onLoad: function onLoad() {},

    showInfo: function showInfo(infovalue) {
        if (!infovalue) {
            return;
        }

        this._curInfo = infovalue;
        this.account.string = infovalue.account;
        this.dealerName.string = infovalue.name;
        this.curGems.string = infovalue.gems;
        this.curSubs.string = infovalue.all_subs;
    },

    onEnterInto: function onEnterInto() {
        if (this._curInfo) this.node.emit("showDealerDetail", this._curInfo.account);
    }
});

cc._RFpop();
},{}],"goods_item_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '9bd14Q8ijJB165lKJvzOuf3', 'goods_item_script');
// resources\prefabes\page_shop\goods_item_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        icon: cc.Sprite,
        title: cc.Label,
        info: cc.Label,
        price: cc.Label,
        _curItem: null
    },

    // use this for initialization
    onLoad: function onLoad() {},

    showInfo: function showInfo(item) {
        if (!item) {
            this._curItem = null;
            return;
        }
        this._curItem = item;

        //icon

        this.title.string = item.goods_name;
        if (item.goods_type == 1) {
            this.info.string = item.goods_num + " 房卡";
        } else if (item.goods_type == 2) {
            this.info.string = item.goods_num + " 金币";
        }

        if (item.price_type == 1) {
            this.price.string = item.goods_price + " 积分";
        } else if (item.price_type == 2) {
            this.price.string = item.goods_price + " 房卡";
        }
    },

    onBuyClick: function onBuyClick() {
        if (this._curItem) {
            this.node.emit("buyGoods", this._curItem);
        }
    }

});

cc._RFpop();
},{}],"kpi_item_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'c9a06NuyO9KtoF2OrPNriZ+', 'kpi_item_script');
// resources\prefabes\page_kpi\kpi_item_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        month: cc.Label,
        gems: cc.Label,
        score: cc.Label,
        subs: cc.Label
    },

    // use this for initialization
    onLoad: function onLoad() {
        // this.cleanInfo();
    },

    showInfo: function showInfo(data) {
        this.month.string = "" + (data.month + 1);
        this.gems.string = data.gems;
        this.score.string = data.score;
        this.subs.string = data.subs;
    },

    cleanInfo: function cleanInfo() {
        this.month.string = "";
        this.gems.string = "";
        this.score.string = "";
        this.subs.string = "";
    }

});

cc._RFpop();
},{}],"menu_item_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '29f311ChOFEmKSMI5yiYqHD', 'menu_item_script');
// resources\prefabes\page_menu\menu_item_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        on: cc.Node,
        off: cc.Node,
        label: cc.Label,
        onColor: cc.Color,
        offColor: cc.Color,
        _isOn: false,
        isOn: {
            set: function set(value) {
                if (this._isOn != value) {
                    this._isOn = value;
                    this.updateState();
                }
            },
            get: function get() {
                return this._isOn;
            }
        }
    },

    onLoad: function onLoad() {
        this.updateState();
    },

    updateState: function updateState() {
        this.on.active = false;
        this.off.active = false;
        if (this.isOn) {
            this.on.active = true;
            this.label.node.color = this.onColor;
        } else {
            this.off.active = true;
            this.label.node.color = this.offColor;
        }
    },

    onClick: function onClick() {
        if (!this.isOn) {
            this.isOn = !this.isOn;
            this.node.emit("change", this.isOn);
        }
    }

});

cc._RFpop();
},{}],"notice_item_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'ec62aKxG+ZC2ZoOIMbZ5pvG', 'notice_item_script');
// resources\prefabes\page_notice\notice_item_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        title: cc.Label,
        content: cc.RichText,
        time: cc.Label
    },

    // use this for initialization
    onLoad: function onLoad() {},

    showInfo: function showInfo(info) {
        if (!info) return;
        this.title.string = info.title;
        this.content.string = info.content;

        var t = new Date();
        t.setTime(info.act_time);
        this.time.string = t.toLocaleString();
    }
});

cc._RFpop();
},{}],"option_item_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'f3ccbowaylLPI3uslpMjOGT', 'option_item_script');
// resources\prefabes\page_index\option_item_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        icons: {
            "default": [],
            type: cc.SpriteFrame
        },
        icon: cc.Sprite,
        iname: cc.Label,
        _optionInfo: null
    },

    // use this for initialization
    onLoad: function onLoad() {},

    showInfo: function showInfo(info) {
        this._optionInfo = info;
        this.icon.spriteFrame = this.icons[info.icon];
        this.iname.string = this._optionInfo.name;
    },

    onEnterClick: function onEnterClick() {
        cc.log("选择了。。。。");
        cc.app.showPage(this._optionInfo.prefab, this._optionInfo.layerIndx, this._optionInfo.showBack, this._optionInfo.backName, this._optionInfo.scriptName, this._optionInfo.detail, this._optionInfo.single, this._optionInfo.store);

        // cc.app.showPage("prefabes/page_dealer/page_create_dealer",0,true,"代理");//"page_charge_user_script",{account:cc.user.account,target:123456}
    }

    // name:name,icon:icon,
    // prefab:prefab,
    // layerIndx:layerIndx,
    // showBack:showBack,backName:backName,
    // scriptName:scriptName,detail:detail,
    // single:single,
    // store:store
});

cc._RFpop();
},{}],"page_charge_dealer_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'd0492SCA5BGt4CZy/nhRV1+', 'page_charge_dealer_script');
// resources\prefabes\page_sell\page_charge_dealer_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        inputUserID: cc.EditBox,
        msg: cc.Label,
        //search res
        searchResult: cc.Node,
        resUserID: cc.Label,
        resUserName: cc.Label,
        resUserGems: cc.Label,
        inputGems: cc.EditBox,
        //charge res
        mkChargeState: cc.Label,
        mkChargeTime: cc.Label,
        mkDetail: cc.Node,
        mkResult: cc.Node,
        mkUserID: cc.Label,
        mkUserName: cc.Label,
        mkUserGems: cc.Label,

        //
        _targetData: null
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.searchResult.active = false;
        this.mkResult.active = false;
        this._targetData = null;
    },
    /**=========================================================================================== */

    onChargeUser: function onChargeUser() {
        if (!this._targetData) {
            return;
        }

        var num = this.inputGems.string;
        if (!num || num == "") {
            // cc.alert.show("错误","请出入充值房卡数额。",1);           
            this.msg = "请输入充值数额";
            return;
        }
        var data = {
            token: cc.userdata.token,
            account: this._targetData.account,
            num: num
        };
        cc.http.sendRequest("/transfer_gems2dealer", data, this.chargeBack.bind(this));
    },

    chargeBack: function chargeBack(ret) {
        console.log(ret);

        this.mkResult.active = true;
        this.mkDetail.active = false;
        this.mkChargeTime.string = new Date().toLocaleDateString();
        if (ret.errcode == 0) {
            // cc.alert.show("代理充值","为 "+ this._targetData.userid +" 充值成功，当前房卡变更为："+ret.targetgems+"。\n自身剩余："+ ret.gems ,1);           
            this.mkChargeState.string = "充值成功。";

            this.mkDetail.active = true;
            this.mkUserID.string = this._targetData.account;
            this.mkUserName.string = this._targetData.name;
            this.mkUserGems.string = ret.targetgems;
        } else if (ret.errcode == 12580) {
            // cc.alert.show("提示","登录状态异常，需要重新登录!",function(){
            //     this.node.dispatchEvent("exitLogin");   
            // });
            this.mkChargeState.string = "登录状态异常，需要重新登录";
        } else if (ret.errcode == 4) {
            // cc.alert.show("代理充值","自身房卡不足，充值失败！",1);           
            this.mkChargeState.string = "自身房卡不足，充值失败！";
        } else if (ret.errcode == 5) {
            // cc.alert.show("代理充值","服务器繁忙，请稍后再试！",1); 
            this.mkChargeState.string = "服务器繁忙，请稍后再试！";
        } else {
            // cc.alert.show("代理充值","服务器异常，请稍后再试！",1);
            this.mkChargeState.string = "服务器异常，请稍后再试！";
        }
    },

    /**=========================================================================================== */
    onSearch: function onSearch() {
        var searchId = this.inputUserID.string;
        if (!searchId || searchId == "") {
            return;
        }
        this.doSearchUser(searchId);
    },

    doSearchUser: function doSearchUser(searchId) {
        this._targetData = null;
        this.msg.string = "查询中。。。";
        this.searchResult.active = false;
        var data = {
            token: cc.userdata.token,
            account: searchId
        };
        cc.http.sendRequest("/get_sub_dealer_by_account", data, this.searchBack.bind(this));
    },

    searchBack: function searchBack(ret) {
        console.log(ret);

        if (ret.errcode == 0) {
            this.msg.string = "查询成功";

            this.resUserID.string = ret.account;
            this.resUserName.string = ret.name, this.resUserGems.string = ret.gems;

            this.inputGems.string = "";
            this._targetData = ret;

            this.searchResult.active = true;
        } else if (ret.errcode == 12580) {
            cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                this.node.dispatchEvent("exitLogin");
            });
        } else {
            this.msg.string = "未获得相关信息，请确认代理ID";
        }
    }

});

cc._RFpop();
},{}],"page_charge_user_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '92ea4/93J1GuYXpz1Lgj/2k', 'page_charge_user_script');
// resources\prefabes\page_sell\page_charge_user_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        inputUserID: cc.EditBox,
        msg: cc.Label,
        //search res
        searchResult: cc.Node,
        resUserID: cc.Label,
        resUserName: cc.Label,
        resUserGems: cc.Label,
        inputGems: cc.EditBox,
        //charge res
        mkChargeState: cc.Label,
        mkChargeTime: cc.Label,
        mkDetail: cc.Node,
        mkResult: cc.Node,
        mkUserID: cc.Label,
        mkUserName: cc.Label,
        mkUserGems: cc.Label,

        //
        _targetData: null
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.searchResult.active = false;
        this.mkResult.active = false;
        this._targetData = null;
    },
    /**=========================================================================================== */

    onChargeUser: function onChargeUser() {
        if (!this._targetData) {
            return;
        }

        var num = this.inputGems.string;
        if (!num || num == "") {
            // cc.alert.show("错误","请出入充值房卡数额。",1);           
            this.msg = "请输入充值数额";
            return;
        }
        var data = {
            token: cc.userdata.token,
            userid: this._targetData.userid,
            num: num
        };
        cc.http.sendRequest("/transfer_gems2user", data, this.chargeBack.bind(this));
    },

    chargeBack: function chargeBack(ret) {
        console.log(ret);

        this.mkResult.active = true;
        this.mkDetail.active = false;
        this.mkChargeTime.string = new Date().toLocaleDateString();
        if (ret.errcode == 0) {
            // cc.alert.show("玩家充值","为 "+ this._targetData.userid +" 充值成功，当前房卡变更为："+ret.targetgems+"。\n自身剩余："+ ret.gems ,1);           
            this.mkChargeState.string = "充值成功。";

            this.mkDetail.active = true;
            this.mkUserID.string = this._targetData.userid;
            this.mkUserName.string = this._targetData.name;
            this.mkUserGems.string = ret.targetgems;
        } else if (ret.errcode == 12580) {
            // cc.alert.show("提示","登录状态异常，需要重新登录!",function(){
            //     this.node.dispatchEvent("exitLogin");   
            // });
            this.mkChargeState.string = "登录状态异常，需要重新登录";
        } else if (ret.errcode == 4) {
            // cc.alert.show("玩家充值","自身房卡不足，充值失败！",1);           
            this.mkChargeState.string = "自身房卡不足，充值失败！";
        } else if (ret.errcode == 5) {
            // cc.alert.show("玩家充值","服务器繁忙，请稍后再试！",1); 
            this.mkChargeState.string = "服务器繁忙，请稍后再试！";
        } else {
            // cc.alert.show("玩家充值","服务器异常，请稍后再试！",1);
            this.mkChargeState.string = "服务器异常，请稍后再试！";
        }
    },

    /**=========================================================================================== */
    onSearch: function onSearch() {
        var searchId = this.inputUserID.string;
        if (!searchId || searchId == "") {
            return;
        }
        this.doSearchUser(searchId);
    },

    doSearchUser: function doSearchUser(searchId) {
        this._targetData = null;
        this.msg.string = "查询中。。。";
        this.searchResult.active = false;
        var data = {
            token: cc.userdata.token,
            userid: searchId
        };
        cc.http.sendRequest("/search_user", data, this.searchBack.bind(this));
    },

    searchBack: function searchBack(ret) {
        console.log(ret);

        if (ret.errcode == 0) {
            this.msg.string = "查询成功";

            this.resUserID.string = ret.userid;
            this.resUserName.string = ret.name, this.resUserGems.string = ret.gems;

            this.inputGems.string = "";
            this._targetData = ret;

            this.searchResult.active = true;
        } else if (ret.errcode == 12580) {
            cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                this.node.dispatchEvent("exitLogin");
            });
        } else {
            this.msg.string = "未获得相关信息，请确认玩家ID";
        }
    }

});

cc._RFpop();
},{}],"page_create_dealer_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '9b4acwHCatOvYhweodxXrDW', 'page_create_dealer_script');
// resources\prefabes\page_dealer\page_create_dealer_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        inputAccount: cc.EditBox,
        inputName: cc.EditBox,
        inputPwd: cc.EditBox,
        msg: cc.Label,
        result: cc.Node,
        state: cc.Label,
        infos: cc.Node,
        mkId: cc.Label,
        mkName: cc.Label,
        mkPwd: cc.Label,
        _temp: null
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.msg.string = "新增代理后，此代理自动成为自身下级代理。";
        this.hideResult();
    },

    /**========================================================================================================== */
    onCreateClick: function onCreateClick() {
        var phone = this.inputAccount.string;
        var name = this.inputName.string;
        var pwd = this.inputPwd.string;

        if (!phone || phone == "" || !name || name == "" || !pwd || pwd == "") {
            // cc.alert.show("错误","信息不完整，请检查信息。",1);
            this.msg.string = "信息不完整，请检查信息。";
        } else {

            this.hideResult();

            this._temp = {
                phone: phone,
                pwd: pwd,
                name: name
            };
            // cc.alert.show("新增代理","请确认信息：\n手机号：" + phone + "\n代理名称：" +name+ "\n初始密码：" +pwd ,0,this.doCreate.bind(this));
            this.doCreate(true);
        }
    },

    doCreate: function doCreate(result) {
        if (result && this._temp) {
            this.addDealer(this._temp.phone, this._temp.name, this._temp.pwd);
        }
    },

    /**========================================================================================================== */
    addDealer: function addDealer(phone, name, pwd) {
        if (!phone || phone == "" || !name || name == "" || !pwd || pwd == "") {
            this.msg = "输入信息不合法，请检查输入。";
            return;
        }

        var data = {
            token: cc.userdata.token,
            account: phone,
            password: pwd,
            name: name
        };
        cc.http.sendRequest("/create_dealer", data, this.addNewBack.bind(this));
    },

    addNewBack: function addNewBack(ret) {
        console.log(ret);
        this.result.active = true;
        this.infos.active = false;
        if (ret.errcode == 0) {
            this.state.string = "创建成功！(请妥善保管创建信息)";
            // this.resultInfo.string = "注册成功：\n手机号：" + this._temp.phone + "\n代理名称：" +this._temp.name+ "\n初始密码：" +this._temp.pwd ;
            this.mkId.string = this._temp.phone;
            this.mkName.string = this._temp.name;
            this.mkPwd.string = this._temp.pwd;

            this.infos.active = true;
        } else if (ret.errcode == 12580) {
            this.state.string = "登录状态异常，需要重新登录";
            // cc.alert.show("提示","登录状态异常，需要重新登录!",function(){
            //     this.node.dispatchEvent("exitLogin");   
            // });
        } else if (ret.errcode == 1) {
                this.state.string = "创建失败，请尝试更换手机号或检查输入是否正确";
            } else {
                // cc.alert.show("新增代理","服务器异常，请稍后再试！",1);
                this.state.string = "服务器异常，请稍后再试！";
            }
    },

    /**==========================================================================================================*/

    onCopyClick: function onCopyClick() {
        if (this._temp) {
            var infos = "代理账号：\n";
            infos += "代理ID:" + this._temp.phone + "\n";
            infos += "代理名称:" + this._temp.name + "\n";
            infos += "初始密码:" + this._temp.pwd + "\n";
            this.copyTxt(infos);
        }
    },

    copyTxt: function copyTxt(value) {
        var clipboardBuffer = document.createElement('textarea');
        clipboardBuffer.style.cssText = 'position:fixed; top:-10px; left:-10px; height:0; width:0; opacity:0;';
        document.body.appendChild(clipboardBuffer);

        clipboardBuffer.focus();
        clipboardBuffer.value = value;
        clipboardBuffer.setSelectionRange(0, clipboardBuffer.value.length);
        var succeeded;
        try {
            succeeded = document.execCommand('copy');
        } catch (e) {
            cc.log("拷贝错误");
        }
        if (succeeded) {
            cc.log("成功拷贝");
        }
    },

    /**==========================================================================================================*/
    hideResult: function hideResult() {
        this.result.active = false;
    }

});

cc._RFpop();
},{}],"page_dealer_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '505d4VYUJNAiZbqRGHvKYOw', 'page_dealer_script');
// resources\prefabes\page_dealer\page_dealer_script.js

cc.Class({
    "extends": cc.Component,

    properties: {},

    onLoad: function onLoad() {},

    onSearchDealer: function onSearchDealer() {
        cc.app.showPage("prefabes/page_dealer/page_search_dealer", 0, true, "代理");
    },

    onCreateDealer: function onCreateDealer() {
        cc.app.showPage("prefabes/page_dealer/page_create_dealer", 0, true, "代理"); //"page_charge_user_script",{account:cc.user.account,target:123456}
    }

});

cc._RFpop();
},{}],"page_detail_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '01659r3NzRP7qyQ8jQgYJ/V', 'page_detail_script');
// resources\prefabes\page_detail\page_detail_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        title: cc.Label,
        account: cc.Label,
        gems: cc.Label,
        score: cc.Label,
        allGems: cc.Label,
        allScore: cc.Label,
        allSubs: cc.Label,

        options: cc.Node,

        _curAccount: null,
        _targetData: null
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.title.string = "错误";
        this.options.active = false;
        this.defaultSeting();
    },

    init: function init(account) {
        this.searchInfo(account);
    },
    /**=====================================================================================================================*/

    onKpiClick: function onKpiClick() {
        //跳转到 kpi 界面
        /**prefab,index,showBack,name,scriptName,detail,single,store*/
        cc.app.showPage("prefabes/page_kpi/page_kpi", 0, true, "代理信息", "page_kpi_script", this._curAccount);
    },

    /**================================================================================================================== */
    searchInfo: function searchInfo(account) {
        this._curAccount = account;
        if (!this._curAccount) {
            this.title.string = "数据错误！";
            return;
        }
        this._targetData = null;
        var data = {
            token: cc.userdata.token,
            account: this._curAccount
        };
        cc.http.sendRequest("/search_dealer", data, this.searchBack.bind(this));
    },

    searchBack: function searchBack(ret) {
        console.log(ret);

        if (!ret.errcode || ret.errcode == 0) {

            this._targetData = ret;

            this.title.string = ret.name;
            this.account.string = ret.account;
            this.gems.string = ret.gems, this.score.string = ret.score;

            this.allGems.string = ret.all_gems;
            this.allScore.string = ret.all_score;
            this.allSubs.string = ret.all_subs;

            this.options.active = true;
        } else if (ret.errcode == 12580) {
            cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                this.node.dispatchEvent("exitLogin");
            });
        } else {
            this.title.string = "数据错误";
        }
    },

    defaultSeting: function defaultSeting() {
        this.title.string = "";
        this.account.string = "";
        this.gems.string = "", this.score.string = "";

        this.allGems.string = "";
        this.allScore.string = "";
        this.allSubs.string = "";
    }

});

cc._RFpop();
},{}],"page_index_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '0c9207JoXhHWrgQfd1iumoT', 'page_index_script');
// resources\prefabes\page_index\page_index_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        listContent: cc.Node,
        listItem: cc.Prefab,
        _myOptions: {
            "default": [],
            type: Object
        }
    },

    // use this for initialization
    onLoad: function onLoad() {

        this.addOptions(0, "公告", 0, "prefabes/page_notice/page_notice", 0, true, "首页");
        this.addOptions(0, "代理商城", 1, "prefabes/page_shop/page_shop", 0, true, "首页");

        this.addOptions(0, "查询代理", 2, "prefabes/page_dealer/page_search_dealer", 0, true, "首页");
        this.addOptions(0, "新增代理", 3, "prefabes/page_dealer/page_create_dealer", 0, true, "首页");

        this.addOptions(0, "玩家充卡", 4, "prefabes/page_sell/page_charge_user", 0, true, "首页");
        this.addOptions(0, "代理充卡", 5, "prefabes/page_sell/page_charge_dealer", 0, true, "首页");

        this.addOptions(0, "我的信息", 6, "prefabes/page_mine/page_mine", 0, true, "首页", "page_mine_script", cc.userdata.account);

        this.showItems();
    },

    showItems: function showItems() {
        this.clearList();

        var privilege = cc.userdata.privilege_level;
        var pre = null;
        this._myOptions.forEach(function (element) {
            if (privilege >= element.privilege) {
                pre = cc.instantiate(this.listItem);
                pre.getComponent("option_item_script").showInfo(element);
                pre.parent = this.listContent;
            }
        }, this);
    },

    //prefab,index,showBack,name,scriptName,detail,single,store
    addOptions: function addOptions(privilege, name, icon, prefab, layerIndx, showBack, backName, scriptName, detail, single, store) {
        this._myOptions.push({ privilege: privilege,
            name: name, icon: icon,
            prefab: prefab,
            layerIndx: layerIndx,
            showBack: showBack, backName: backName,
            scriptName: scriptName, detail: detail,
            single: single,
            store: store
        });
    },

    clearList: function clearList() {
        this.listContent.removeAllChildren();
    }

});

cc._RFpop();
},{}],"page_kpi_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '27eacosj21ETb/hIaohTPV1', 'page_kpi_script');
// resources\prefabes\page_kpi\page_kpi_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        title: cc.Label,
        year: cc.Label,
        listContent: cc.Node,
        listItem: cc.Prefab,
        msg: cc.Label,
        _curAccount: null,
        _curYear: null,
        _curData: null
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.showMsg();
        this.title.string = "KPI";
        this._curYear = new Date().getFullYear();
        this.year.string = this._curYear;
    },
    /**=============================================================================================================== */
    onPreClick: function onPreClick() {
        this._curYear--;
        this.year.string = this._curYear;
        this.searchInfo();
    },

    onNextClick: function onNextClick() {
        this._curYear++;
        this.year.string = this._curYear;
        this.searchInfo();
    },

    /**=============================================================================================================== */
    init: function init(account) {
        this._curAccount = account;
        this.searchInfo(account);
    },

    searchInfo: function searchInfo() {
        if (!this._curAccount) {
            this.showMsg("查询数据错误");
            return;
        } else {
            this.title.String = "KPI:" + this._curAccount;
        }

        this.cleanList();

        this._targetData = null;
        var data = {
            token: cc.userdata.token,
            account: this._curAccount,
            year: this._curYear
        };
        cc.http.sendRequest("/search_dealer_kpi", data, this.searchBack.bind(this));
    },

    searchBack: function searchBack(ret) {
        console.log(ret);

        if (!ret.errcode || ret.errcode == 0) {
            if (ret.length == 0) {
                this.showMsg("暂无数据");
                return;
            }
            var pre;
            ret.forEach(function (element) {
                pre = cc.instantiate(this.listItem);
                pre.getComponent("kpi_item_script").showInfo(element);
                pre.parent = this.listContent;
            }, this);
        } else if (ret.errcode == 12580) {
            cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                this.node.dispatchEvent("exitLogin");
            });
        } else {
            this.showMsg("查询数据错误");
        }
    },

    /**=============================================================================================================== */
    showMsg: function showMsg(value) {
        this.msg.node.active = false;
        this.msg.string = "";
        if (value && value != "") {
            this.msg.string = value;
            this.msg.node.active = true;
        }
    },

    cleanList: function cleanList() {
        this.listContent.removeAllChildren();
    }
});

cc._RFpop();
},{}],"page_login_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '0bd9dYxSqJG9rp70bxh0AXo', 'page_login_script');
// resources\prefabes\page_login\page_login_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        txt_account: cc.EditBox,
        txt_pwd: cc.EditBox,
        label_msg: cc.Label
    },

    onLoad: function onLoad() {
        var account = cc.sys.localStorage.getItem("account");
        var pwd = cc.sys.localStorage.getItem("password");
        var lastLogin = cc.sys.localStorage.getItem("lastLogin");
        if (!lastLogin) lastLogin = 0;
        //1小时失效
        if (account && pwd && Date.now() - lastLogin < 3600000) {
            this.doLogin(account, pwd);
        } else {
            cc.sys.localStorage.removeItem("password");
            this.showLogin(account);
        }

        this.showMsg();
    },

    showLogin: function showLogin(account) {
        this.txt_account.string = account || "";
        this.txt_pwd.string = "";
    },

    onBeginEdit: function onBeginEdit() {
        this.showMsg();
    },

    doLogin: function doLogin(uid, pwd) {
        var fn = function fn(ret) {
            if (ret.errcode === 0) {
                cc.log("登陆成功" + ret.name);
                cc.sys.localStorage.setItem("lastLogin", Date.now());
                cc.userdata = ret;
                cc.app.removePage(2, 0);
                cc.app.showPage("prefabes/page_index/page_index", 0, false);
            } else {
                cc.sys.localStorage.removeItem("account");
                cc.sys.localStorage.removeItem("password");
                this.showMsg("用户名或密码不正确！");
            }
        };

        var data = {
            account: uid,
            password: pwd
        };

        cc.sys.localStorage.setItem("account", data.account);
        cc.sys.localStorage.setItem("password", data.password);
        cc.sys.localStorage.setItem("lastLogin", 0);
        cc.http.sendRequest("/login", data, fn.bind(this));
    },

    showMsg: function showMsg(msg) {
        if (msg && msg != "") {
            this.label_msg.string = msg;
            this.label_msg.node.active = true;
            return;
        }
        this.label_msg.node.active = false;
    },

    onLoginBtnClick: function onLoginBtnClick() {
        var uid = this.txt_account.string;
        var pwd = this.txt_pwd.string;
        if (!uid || uid == "") {
            this.showMsg("请输入用户名!");
            return;
        }
        if (!pwd || pwd == "") {
            this.showMsg("请输入密码！");
            return;
        }
        this.doLogin(uid, pwd);
    }
});

cc._RFpop();
},{}],"page_menu_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '7e288XplJpEoIGXy3F2zwP7', 'page_menu_script');
// resources\prefabes\page_menu\page_menu_script.js

var MENU_ITEM = require("menu_item_script");
cc.Class({
    "extends": cc.Component,

    properties: {
        menus: {
            "default": [],
            type: MENU_ITEM
        },
        _curState: -1
    },

    onLoad: function onLoad() {
        this.menus.forEach(function (element) {
            element.isOn = false;
            element.node.on("change", this.onSelectChange.bind(this));
        }, this);
        this._curState = -1;
        // this.setSeletMenu(_curState);
    },

    start: function start() {
        this.setSeletMenu(0);
    },

    onSelectChange: function onSelectChange(event) {

        var olds = this.menus[this._curState];
        olds.isOn = false;

        var targ = event.target;
        var indx = this.menus.indexOf(targ.getComponent("menu_item_script"));
        this.setSeletMenu(indx);
    },

    setSeletMenu: function setSeletMenu(index) {
        if (this._curState == index || index < 0 || index >= this.menus.length) return;

        this._curState = index;
        this._updateState();
        cc.app.removePage(0, 0);
        /**prefab,index,showBack,name,scriptName,detail,single,store*/
        switch (this._curState) {
            case 0:
                cc.app.showPage("prefabes/page_index/page_index", 0, false, null, null, null, true);
                break;
            case 1:
                cc.app.showPage("prefabes/page_shop/page_shop", 0, false, null, null, null, true);
                break;
            case 2:
                cc.app.showPage("prefabes/page_sell/page_sell", 0, false, null, null, null, true);
                break;
            case 3:
                cc.app.showPage("prefabes/page_dealer/page_dealer", 0, false, null, null, null, true);
                break;
            case 4:
                cc.app.showPage("prefabes/page_mine/page_mine", 0, false, null, "page_mine_script", cc.userdata.account, null, true);
                break;
        }
    },

    _updateState: function _updateState() {
        if (this._curState < 0 || this._curState >= this.menus.length) return;

        for (var index = 0; index < this.menus.length; index++) {

            if (index == this._curState) {
                this.menus[index].isOn = true;
                continue;
            }
            this.menus[index].isOn = false;
        }
    }

});

cc._RFpop();
},{"menu_item_script":"menu_item_script"}],"page_mine_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '9fa15BnH/RBIKo6k3pmWhCw', 'page_mine_script');
// resources\prefabes\page_mine\page_mine_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        title: cc.Label,
        account: cc.Label,
        gems: cc.Label,
        score: cc.Label,
        allGems: cc.Label,
        allScore: cc.Label,
        allSubs: cc.Label,

        options: cc.Node,

        _curAccount: null,
        _targetData: null
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.title.string = "错误";
        this.options.active = false;
        this.defaultSeting();
    },

    init: function init(account) {
        this.searchInfo(account);
    },
    /**=====================================================================================================================*/

    onKpiClick: function onKpiClick() {
        //跳转到 kpi 界面
        /**prefab,index,showBack,name,scriptName,detail,single,store*/
        cc.app.showPage("prefabes/page_kpi/page_kpi", 0, true, "我的信息", "page_kpi_script", this._curAccount);
    },

    onChangePwdClick: function onChangePwdClick() {
        cc.app.showPage("prefabes/page_pwd/page_pwd", 0, true, "我的信息");
    },

    onExitLoginClick: function onExitLoginClick() {
        cc.sys.localStorage.removeItem("account");
        cc.sys.localStorage.removeItem("password");
        cc.app.cleanAllLayers();
        cc.app.showPage("prefabes/page_login/page_login", 2);
    },

    /**================================================================================================================== */
    searchInfo: function searchInfo(account) {
        this._curAccount = account;
        if (!this._curAccount) {
            this.title.string = "数据错误！";
            return;
        }
        this._targetData = null;
        var data = {
            token: cc.userdata.token,
            account: this._curAccount
        };
        cc.http.sendRequest("/search_dealer", data, this.searchBack.bind(this));
    },

    searchBack: function searchBack(ret) {
        console.log(ret);

        if (!ret.errcode || ret.errcode == 0) {

            this._targetData = ret;

            this.title.string = ret.name;
            this.account.string = ret.account;
            this.gems.string = ret.gems, this.score.string = ret.score;

            this.allGems.string = ret.all_gems;
            this.allScore.string = ret.all_score;
            this.allSubs.string = ret.all_subs;

            this.options.active = true;
        } else if (ret.errcode == 12580) {
            cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                this.node.dispatchEvent("exitLogin");
            });
        } else {
            this.title.string = "数据错误";
        }
    },

    defaultSeting: function defaultSeting() {
        this.title.string = "";
        this.account.string = "";
        this.gems.string = "", this.score.string = "";

        this.allGems.string = "";
        this.allScore.string = "";
        this.allSubs.string = "";
    }

});

cc._RFpop();
},{}],"page_notice_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '4cfa97rxm9MrYHwNxG+yt+z', 'page_notice_script');
// resources\prefabes\page_notice\page_notice_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        listContent: cc.Node,
        listItem: cc.Prefab,
        msg: cc.Label
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.clearContent();
        this.getNotice();
    },

    getNotice: function getNotice() {
        var data = {
            token: cc.userdata.token
        };
        cc.http.sendRequest("/get_notice", data, this.searchBack.bind(this));
    },

    searchBack: function searchBack(ret) {
        console.log(ret);
        if (ret.errcode) {
            if (ret.errcode == 12580) {
                cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                    this.node.dispatchEvent("exitLogin");
                });
                return;
            } else {
                cc.alert.show("查询代理", "服务器异常，请稍后再试！", 1);
                return;
            }
        } else {
            this.showResult(ret);
        }
    },

    showResult: function showResult(ret) {

        this.clearContent();
        if (!ret) return;
        if (ret.length == 0) {
            this.msg.node.active = true;
            return;
        }
        this.msg.node.active = false;
        var pre;
        ret.forEach(function (element) {
            pre = cc.instantiate(this.listItem);
            pre.getComponent("notice_item_script").showInfo(element);
            pre.parent = this.listContent;
        }, this);
    },

    clearContent: function clearContent() {
        this.listContent.removeAllChildren();
    }

});

cc._RFpop();
},{}],"page_pwd_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'f03d7oYg31Ar5XGrl+hlD7s', 'page_pwd_script');
// resources\prefabes\page_pwd\page_pwd_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        inputOld: cc.EditBox,
        inputNew: cc.EditBox,
        inputRenew: cc.EditBox,
        msg: cc.Label
    },

    // use this for initialization
    onLoad: function onLoad() {},

    onChangeClick: function onChangeClick() {
        var old = this.inputOld.string;
        var newpwd = this.inputNew.string;
        var renew = this.inputRenew.string;

        if (!old || old == "" || !newpwd || newpwd == "" || !renew || renew == "") {
            this.msg.string = "数据不完整，请检查输入！";
            retrun;
        }

        if (newpwd != renew) {
            this.inputNew.string = "";
            this.inputRenew.string = "";
            this.msg.string = "两次新密码输入不同，请重新输入！";
            return;
        }
        this.cleanInput();
        this.doChange(old, newpwd);
    },

    doChange: function doChange(oldpwd, newpwd) {
        if (!oldpwd || oldpwd == "" || !newpwd || newpwd == "") {
            return;
        }
        var data = {
            token: cc.userdata.token,
            account: cc.userdata.account,
            oldpwd: oldpwd,
            newpwd: newpwd
        };
        cc.http.sendRequest("/change_own_pwd", data, this.changeBack.bind(this));
    },

    changeBack: function changeBack(ret) {
        console.log(ret);
        if (ret.errcode == 0) {
            this.msg.string = "修改成功！(请妥善保管密码信息)";
            //重新登录
            cc.sys.localStorage.removeItem("account");
            cc.sys.localStorage.removeItem("password");
            cc.app.cleanAllLayers();
            cc.app.showPage("prefabes/page_login/page_login", 2);
        } else if (ret.errcode == 12580) {
            this.msg.string = "登录状态异常，需要重新登录";
            // cc.alert.show("提示","登录状态异常，需要重新登录!",function(){
            //     this.node.dispatchEvent("exitLogin");   
            // });
        } else if (ret.errcode == 1) {
                this.msg.string = "修改失败！请检查原密码是否正确";
            } else {
                // cc.alert.show("新增代理","服务器异常，请稍后再试！",1);
                this.msg.string = "服务器异常，请稍后再试！";
            }
    },

    cleanInput: function cleanInput() {
        this.inputOld.string = "";
        this.inputNew.string = "";
        this.inputRenew.string = "";
    }

});

cc._RFpop();
},{}],"page_search_dealer_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'a7188emCMVCY7C3PDIM++Og', 'page_search_dealer_script');
// resources\prefabes\page_dealer\page_search_dealer_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        inputAccount: cc.EditBox,
        listItem: cc.Prefab,

        listContent: cc.Node,
        msg: cc.Label,
        prePage: cc.Node,
        nextPage: cc.Node,
        maxRows: 10,
        _curIdx: 0
    },

    onLoad: function onLoad() {
        this.msg.node.active = false;
        this.clearList();
        this.hidePageBtn();
    },

    /**================================================================================================ */
    searchAllDealer: function searchAllDealer(start) {

        var data = {
            token: cc.userdata.token,
            start: start,
            rows: this.maxRows
        };
        cc.http.sendRequest("/search_sub_dealers", data, this.searchAllBack.bind(this));
    },

    searchAllBack: function searchAllBack(ret) {
        console.log(ret);
        if (ret.errcode) {
            this.msg.node.active = true;
            if (ret.errcode == 12580) {
                cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                    this.node.dispatchEvent("exitLogin");
                });
                return;
            } else {
                cc.alert.show("查询代理", "服务器异常，请稍后再试！", 1);
                return;
            }
        } else {
            // cc.alert.show("查询","查询成功")
            this.msg.node.active = false;
            this.showResult(ret);
        }
    },

    searchDealer: function searchDealer(account) {
        if (!account || account == "") {
            return;
        }
        var data = {
            token: cc.userdata.token,
            account: account
        };
        cc.http.sendRequest("/get_sub_dealer_by_account", data, this.searchBack.bind(this));
    },

    searchBack: function searchBack(ret) {
        console.log(ret);
        this.clearList();
        if (ret.errcode) {
            this.msg.node.active = true;
            if (ret.errcode == 12580) {
                cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                    this.node.dispatchEvent("exitLogin");
                });
            }
        } else {
            this.msg.node.active = false;
            this.showResult([ret]);
        }
    },

    showResult: function showResult(ret) {
        if (!ret) return;

        this.showPageBtn(this._curIdx, ret.length);
        this.clearList();
        var pre;
        ret.forEach(function (element) {
            pre = cc.instantiate(this.listItem);
            pre.getComponent("dealer_item_script").showInfo(element);
            pre.on("showDealerDetail", this.showDetail.bind(this));
            pre.parent = this.listContent;
        }, this);
    },

    showDetail: function showDetail(event) {
        if (event && event.detail) {
            cc.app.showPage("prefabes/page_detail/page_detail", 0, true, "查询代理", "page_detail_script", event.detail);
        }
        cc.log("show dealer detail");
    },

    /**================================================================================================ */
    onSearchOneClick: function onSearchOneClick() {
        var account = this.inputAccount.string;
        if (!account || account == "") {
            cc.alert.show("精准查询", "请输入代理ID。", 1);
        } else {
            this._curIdx = 0;
            this.hidePageBtn();
            this.searchDealer(account);
        }
    },

    onSearchPerClick: function onSearchPerClick() {
        this._curIdx -= this.maxRows;
        if (this._curIdx < 0) this._curIdx = 0;

        this.searchAllDealer(this._curIdx);
    },

    onSearchNextClick: function onSearchNextClick() {
        this._curIdx += this.maxRows;
        if (this._curIdx < 0) this._curIdx = 0;
        this.searchAllDealer(this._curIdx);
    },

    onSearchAllClick: function onSearchAllClick() {
        this._curIdx = 0;
        this.searchAllDealer(0);
    },

    /**================================================================================ */
    showPageBtn: function showPageBtn(start, curRows) {
        this.hidePageBtn();
        if (start >= this.maxRows) {
            this.prePage.active = true;
        }

        if (curRows >= this.maxRows) {
            this.nextPage.active = true;
        }
    },

    hidePageBtn: function hidePageBtn() {
        this.prePage.active = false;
        this.nextPage.active = false;
    },

    clearList: function clearList() {
        this.listContent.removeAllChildren();
    }

});

cc._RFpop();
},{}],"page_sell_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, '0a31bTvKepA26uPhncelFP8', 'page_sell_script');
// resources\prefabes\page_sell\page_sell_script.js

cc.Class({
    "extends": cc.Component,

    properties: {},

    // use this for initialization
    onLoad: function onLoad() {},

    /**prefab,index,showBack,name,scriptName,detail,single,store*/
    onChargeUser: function onChargeUser() {
        cc.app.showPage("prefabes/page_sell/page_charge_user", 0, true, "售卡");
    },

    onChargeDealer: function onChargeDealer() {
        cc.app.showPage("prefabes/page_sell/page_charge_dealer", 0, true, "售卡"); //"page_charge_user_script",{account:cc.user.account,target:123456}
    },

    onFreshInfo: function onFreshInfo() {}

});

cc._RFpop();
},{}],"page_shop_log_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'fbcea+Puj1FJ4vY92NyxLzP', 'page_shop_log_script');
// resources\prefabes\page_shop_log\page_shop_log_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        options: cc.Node,
        prePage: cc.Node,
        nextPage: cc.Node,
        listContent: cc.Node,
        listItem: cc.Prefab,
        msg: cc.Label,
        maxRows: 10,
        _curIdx: 0
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.clearList();
        this.hidePageBtn();
        this.searchLogs();
    },

    /**================================================================================================ */
    searchAllLog: function searchAllLog(start) {

        var data = {
            token: cc.userdata.token,
            start: start,
            rows: this.maxRows
        };
        cc.http.sendRequest("/get_buy_goods_log", data, this.searchAllBack.bind(this));
    },

    searchAllBack: function searchAllBack(ret) {
        console.log(ret);
        if (ret.errcode) {
            if (ret.errcode == 12580) {
                cc.alert.show("提示", "登录状态异常，需要重新登录!", function () {
                    this.node.dispatchEvent("exitLogin");
                });
                return;
            } else {
                cc.alert.show("查询代理", "服务器异常，请稍后再试！", 1);
                return;
            }
        } else {
            // cc.alert.show("查询","查询成功")
            this.showResult(ret);
        }
    },

    showResult: function showResult(ret) {
        if (!ret) return;

        this.showPageBtn(this._curIdx, ret.length);
        this.clearList();

        this.msg.node.active = false;
        if (ret.length == 0) {
            this.msg.node.active = true;
        }

        var pre;
        ret.forEach(function (element) {
            pre = cc.instantiate(this.listItem);
            pre.getComponent("shop_log_item_script").showInfo(element);
            pre.parent = this.listContent;
        }, this);
    },

    searchLogs: function searchLogs() {
        this._curIdx = 0;
        this.searchAllLog(0);
    },

    onSearchPerClick: function onSearchPerClick() {
        this._curIdx -= this.maxRows;
        if (this._curIdx < 0) this._curIdx = 0;

        this.searchAllLog(this._curIdx);
    },

    onSearchNextClick: function onSearchNextClick() {
        this._curIdx += this.maxRows;
        if (this._curIdx < 0) this._curIdx = 0;
        this.searchAllLog(this._curIdx);
    },
    /**================================================================================ */
    showPageBtn: function showPageBtn(start, curRows) {
        this.hidePageBtn();
        if (start >= this.maxRows) {
            this.prePage.active = true;
        }

        if (curRows >= this.maxRows) {
            this.nextPage.active = true;
        }
    },

    hidePageBtn: function hidePageBtn() {
        this.prePage.active = false;
        this.nextPage.active = false;
    },

    clearList: function clearList() {
        this.listContent.removeAllChildren();
    }

});

cc._RFpop();
},{}],"page_shop_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'baaa1kTFRJJg6jcGWPfbqi4', 'page_shop_script');
// resources\prefabes\page_shop\page_shop_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        listContent: cc.Node,
        listItem: cc.Prefab,
        msg: cc.Label,
        _curAccount: null,
        _targetData: null
    },

    // use this for initialization
    onLoad: function onLoad() {
        this.msg.string = "";
        this.clearList();
        this.searchGoods();
    },

    /**================================================================================================================*/

    searchGoods: function searchGoods() {
        var data = {
            token: cc.userdata.token
        };
        cc.http.sendRequest("/get_goods", data, this.searchGoodsBack.bind(this));
    },

    searchGoodsBack: function searchGoodsBack(ret) {
        if (!ret) return;

        this.clearList();
        var pre;
        ret.forEach(function (element) {
            pre = cc.instantiate(this.listItem);
            pre.getComponent("goods_item_script").showInfo(element);
            pre.on("buyGoods", this.onBuyGoods.bind(this));
            pre.parent = this.listContent;
        }, this);
    },

    onBuyGoods: function onBuyGoods(event) {
        var det = event.detail;
        if (!det) return;
        cc.log("buy goods" + det);
        var data = {
            token: cc.userdata.token,
            id: det.id
        };
        cc.http.sendRequest("/buy_goods", data, this.buyBack.bind(this));
    },

    buyBack: function buyBack(ret) {
        if (!ret) return;
        if (ret.errcode == 0) {
            if (ret.goods_type == 1) {
                this.msg.string = "购买成功！获得：" + ret.goods_num + "房卡";
            } else if (ret.goods_type == 2) {
                this.msg.string = "购买成功！获得：" + ret.goods_num + "金币";
            }
        } else if (ret.errcode == 1) {
            this.msg.string = "数据错误，请稍后再试";
        } else if (ret.errcode == 2) {
            this.msg.string = "货币不足，购买失败！";
        } else if (ret.errcode == 3) {
            this.msg.string = "系统繁忙，请稍后再试。";
        } else if (ret.errcode == 4) {
            this.msg.string = "系统错误，请联系客服人员！";
        } else if (ret.errcode == 5) {
            this.msg.string = "系统繁忙，请稍后再试。";
        }
    },

    /**===================================================================================================== */
    onBuyRecords: function onBuyRecords() {
        cc.app.showPage("prefabes/page_shop_log/page_shop_log", 0, true, "商城");
    },

    /**===================================================================================================== */
    clearList: function clearList() {
        this.listContent.removeAllChildren();
    }
});

cc._RFpop();
},{}],"shop_log_item_script":[function(require,module,exports){
"use strict";
cc._RFpush(module, 'e8aa7oSLUZOJogeWpdPrAES', 'shop_log_item_script');
// resources\prefabes\page_shop_log\shop_log_item_script.js

cc.Class({
    "extends": cc.Component,

    properties: {
        time: cc.Label,
        goods: cc.Label,
        price: cc.Label
    },

    // use this for initialization
    onLoad: function onLoad() {},

    showInfo: function showInfo(item) {
        if (!item) return;
        var t = new Date();
        t.setTime(item.time);
        this.time.string = t.toLocaleString();

        if (item.goods_type == 1) {
            this.goods.string = "+ " + item.goods_num + "房卡";
        } else if (item.goods_type == 2) {
            this.goods.string = "+ " + item.goods_num + "金币";
        }

        if (item.price_type == 1) {
            this.price.string = "- " + item.goods_price + "积分";
        } else if (item.goods_type == 2) {
            this.price.string = "- " + item.goods_price + "房卡";
        }
    }
});

cc._RFpop();
},{}]},{},["page_detail_script","page_sell_script","page_login_script","page_index_script","menu_item_script","page_kpi_script","HTTP","page_notice_script","page_dealer_script","dealer_item_script","page_menu_script","core","page_charge_user_script","page_create_dealer_script","goods_item_script","page_mine_script","App","page_search_dealer_script","page_shop_script","kpi_item_script","page_charge_dealer_script","shop_log_item_script","page_pwd_script","notice_item_script","page_shop_log_script","option_item_script"])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
